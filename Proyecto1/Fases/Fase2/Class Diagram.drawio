<mxfile host="app.diagrams.net" modified="2022-03-28T03:59:27.736Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36" etag="rc2TiPOrGzRK-zqU15ez" version="17.2.4" type="github">
  <diagram id="iIIfenbII26HnZvDp0SM" name="Page-1">
    <mxGraphModel dx="2512" dy="786" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="RwTfGQe-aQz1MfiA24sD-1" value="&lt;p style=&quot;margin: 0px ; margin-top: 4px ; text-align: center&quot;&gt;&lt;b&gt;Lector&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- variableStorage: VariableStorage&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- functionstorage: FunctionStorage&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ Lector()&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ getVariableStorage(): VariableStorage&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+&amp;nbsp;setVariableStorage(variableStorage: VariableStorage): void&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+ getFunctionStorage(): FunctionStorage&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px&quot;&gt;+&amp;nbsp;setFunctionStorage(functionStorage: FunctionStorage): void&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ readInstruction(scan: String): void&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- getCases(ins: LinkedList&amp;lt;String&amp;gt;, variableStorage: VariableStorage): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="240" y="80" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-14" value="&lt;p style=&quot;margin: 0px ; margin-top: 4px ; text-align: center&quot;&gt;&lt;b&gt;tokenizer&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- tokenized(command: String): LinkedList&amp;lt;String&amp;gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- quotation(lista: LinkedList&amp;lt;String&amp;gt;): LinkedList&amp;lt;String&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ equalParenthesis(command: String): LinkedList&amp;lt;String&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="760" y="80" width="320" height="100" as="geometry" />
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-18" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="RwTfGQe-aQz1MfiA24sD-16" target="RwTfGQe-aQz1MfiA24sD-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-16" value="&lt;p style=&quot;margin: 0px ; margin-top: 4px ; text-align: center&quot;&gt;&lt;b&gt;Main&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ main(args String[]): void&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry y="140" width="160" height="80" as="geometry" />
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-19" value="&lt;p style=&quot;margin: 0px ; margin-top: 4px ; text-align: center&quot;&gt;&lt;b&gt;Lector&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ Lector()&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ getVariableStorage(): VariableStorage&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ getFunctionStorage(): FunctionStorage&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ setVariableStorage(variableStorage: VariableStorage): void&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ setFunctionStorage(functionStorage: FunctionStorage): void&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ readInstruction(scan: String): void&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- getCases(ins: LinkedList&amp;lt;String&amp;gt;, variableStorage: VariableStorage): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="760" y="240" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-21" value="&lt;p style=&quot;margin: 0px ; margin-top: 4px ; text-align: center&quot;&gt;&lt;b&gt;Function&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ Function()&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ Defun(lista: LinkedList&amp;lt;String&amp;gt;, variableStorage: VariableStorage, functionStorage: FunctionStorage): void&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ functionExecution(callF: LinkedList&amp;lt;String&amp;gt;, var: VariableStorage, fun: FunctionStorage): String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- notRecursive(call: LinkedList&amp;lt;String&amp;gt;, ins: VariableStorage, fun: FunctionStorage): String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- executeCases(ins: LinkedList&amp;lt;String&amp;gt;, var: VariableStorage, fun: FunctionStorage): String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- changeArgs(call: LinkedList&amp;lt;String&amp;gt; , params: LinkedList&amp;lt;String&amp;gt;, inst: LinkedList&amp;lt;String&amp;gt; , var: VariableStorage, fun: FunctionStorage): LinkedList&amp;lt;String&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- variableCases(call: LinkedList&amp;lt;String&amp;gt;, var: VariableStorage, fun: FunctionStorage): LinkedList&amp;lt;String&amp;gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- separate(lista: LinkedList&amp;lt;String&amp;gt;): LinkedList&amp;lt;LinkedList&amp;lt;&amp;lt;String&amp;gt;&amp;gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="-160" y="560" width="840" height="160" as="geometry" />
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-22" value="&lt;p style=&quot;margin: 0px ; margin-top: 4px ; text-align: center&quot;&gt;&lt;b&gt;CONDI&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ CONDI()&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ COND(lista: LinkedList&amp;lt;String&amp;gt;, variableStorage: VariableStorage): void&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ getIfs(lista: LinkedList&amp;lt;String&amp;gt;): LinkedList&amp;lt;LinkedList&amp;lt;String&amp;gt;&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ getConditional(lista: LinkedList&amp;lt;String&amp;gt;): LinkedList&amp;lt;LinkedList&amp;lt;String&amp;gt;&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ getCases(ins: LinkedList&amp;lt;String&amp;gt;, variableStorage: VariableStorage): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="760" y="560" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-23" value="&lt;p style=&quot;margin: 0px ; margin-top: 4px ; text-align: center&quot;&gt;&lt;b&gt;Calculator&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ Final: float&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ Stack: Stack&amp;lt;String&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ Comparison_Operation: boolean&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ OPType: String&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ Finalbool: boolean&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ Calculator(lista: LinkedList&amp;lt;String&amp;gt;, variableStorage: VariableStorage)&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- Interpret(): void&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- Plus(callStack: Stack&amp;lt;String&amp;gt;): float&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- Minus(callStack: Stack&amp;lt;String&amp;gt;): float&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- Multi(callStack: Stack&amp;lt;String&amp;gt;): float&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- Div(callStack: Stack&amp;lt;String&amp;gt;): float&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- Pow(callStack: Stack&amp;lt;String&amp;gt;): float&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- GreaterThan(callStack: Stack&amp;lt;String&amp;gt;): boolean&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- SmallerThan(callStack: Stack&amp;lt;String&amp;gt;): boolean&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- Equals(callStack: Stack&amp;lt;String&amp;gt;): boolean&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ getOpType(): String&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ Result(): float&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ ResultComp(): boolean&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;- fixList(lista: LinkedList&amp;lt;String&amp;gt;, variableStorage: VariableStorage): LinkedList&amp;lt;String&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="760" y="720" width="490" height="320" as="geometry" />
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-24" value="&lt;p style=&quot;margin: 0px ; margin-top: 4px ; text-align: center&quot;&gt;&lt;b&gt;Predicates&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ evaluateList(lista0 LinkedList&amp;lt;String&amp;gt;, variableStorage: VariableStorage): LinkedList&amp;lt;String&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ evaluateAtom(lista1 LinkedList&amp;lt;String&amp;gt;, variableStorage: VariableStorage): LinkedList&amp;lt;String&amp;gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ caseQuote(lista2 LinkedList&amp;lt;String&amp;gt;): LinkedList&amp;lt;String&amp;gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ caseEqual(lista3 LinkedList&amp;lt;String&amp;gt;, variableStorage: VariableStorage): boolean&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="760" y="430" width="520" height="100" as="geometry" />
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-25" value="&lt;p style=&quot;margin: 0px ; margin-top: 4px ; text-align: center&quot;&gt;&lt;b&gt;Patterns&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ LETER: String&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ LITERAL: String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ VALID_NAME: String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ WHITESPACE: String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ NUMERIC_ATOM: String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ OPERATIONS: String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ SYMBOL: String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ QUOTATION: String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ CONS: String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ ATOM: String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ LIST: String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ SETQ: String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ QUOTE: String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ DEFUN: String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ COND: String&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px ; margin-left: 4px&quot;&gt;+ EQUAL: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry y="240" width="160" height="280" as="geometry" />
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-34" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;exitX=0.75;exitY=1;exitDx=0;exitDy=0;" parent="1" source="RwTfGQe-aQz1MfiA24sD-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="270" y="480" as="sourcePoint" />
            <mxPoint x="570" y="560" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-35" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;exitX=1;exitY=0.25;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="RwTfGQe-aQz1MfiA24sD-1" target="RwTfGQe-aQz1MfiA24sD-14" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="590" y="300" as="sourcePoint" />
            <mxPoint x="620" y="400" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-36" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="RwTfGQe-aQz1MfiA24sD-1" target="RwTfGQe-aQz1MfiA24sD-19" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="680" y="190" as="sourcePoint" />
            <mxPoint x="760" y="190" as="targetPoint" />
            <Array as="points">
              <mxPoint x="720" y="180" />
              <mxPoint x="720" y="320" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-37" value="" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" target="RwTfGQe-aQz1MfiA24sD-24" edge="1">
          <mxGeometry x="0.1579" y="-70" width="160" relative="1" as="geometry">
            <mxPoint x="720" y="320" as="sourcePoint" />
            <mxPoint x="780" y="150" as="targetPoint" />
            <Array as="points">
              <mxPoint x="720" y="480" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-39" value="" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" edge="1">
          <mxGeometry x="0.1579" y="-70" width="160" relative="1" as="geometry">
            <mxPoint x="720" y="480" as="sourcePoint" />
            <mxPoint x="760" y="640" as="targetPoint" />
            <Array as="points">
              <mxPoint x="720" y="640" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-40" value="" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" edge="1">
          <mxGeometry x="0.1579" y="-70" width="160" relative="1" as="geometry">
            <mxPoint x="720" y="640" as="sourcePoint" />
            <mxPoint x="760" y="800" as="targetPoint" />
            <Array as="points">
              <mxPoint x="720" y="800" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="RwTfGQe-aQz1MfiA24sD-41" value="Use" style="endArrow=open;endSize=12;dashed=1;html=1;rounded=0;exitX=0.25;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="RwTfGQe-aQz1MfiA24sD-1" target="RwTfGQe-aQz1MfiA24sD-25" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330.00000000000045" y="290" as="sourcePoint" />
            <mxPoint x="330" y="570" as="targetPoint" />
            <Array as="points">
              <mxPoint x="350" y="380" />
            </Array>
          </mxGeometry>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
